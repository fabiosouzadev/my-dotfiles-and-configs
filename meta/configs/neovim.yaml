- create:
    - ~/.local/src
    - ~/.local/bin

- shell:
    - description: Validating sudo credentials
      command: "sudo --validate"
    - description: Build prerequisites
      command: |
        if [ `uname` = 'Darwin' ]; then
          xcode-select --install
          brew install ninja cmake gettext curl
        elif [ `uname` = 'Linux' ]; then 
          case $(lsb_release -is) in 
            Ubuntu)
              sudo apt-get install -y ninja-build \
                gettext \
                libtool \
                libtool-bin \
                autoconf \
                automake \
                cmake \
                g++ \
                pkg-config \
                unzip \
                curl \
                doxygen
              ;;

            Arch | EndeavourOS)
              sudo pacman -Sy --noconfirm base-devel \
                cmake \
                unzip \
                ninja \
                tree-sitter \
                curl
              ;;
          esac
        fi
    - description: Clean older versions
      command: |
        if [ -d $HOME/.cache/nvim/ ]; then 
          sudo rm -r $HOME/.cache/nvim 
        fi 
        if [ -d $HOME/.local/share/nvim/ ]; then 
          sudo rm -r $HOME/.local/share/nvim 
        fi
        if [ -d /usr/local/share/nvim/ ]; then
          sudo rm -r /usr/local/share/nvim 
        fi
        if [ -d $HOME/.local/src/neovim ]; then 
          sudo rm -r $HOME/.local/src/neovim 
        fi
        if [ -d $HOME/.local/state/nvim ]; then 
          sudo rm -r $HOME/.local/state/nvim 
        fi
        if [ -f /usr/local/bin/nvim ]; then 
          sudo rm /usr/local/bin/nvim 
        fi
      stdout: true

    - description: Build neovim
      command: |
        git clone https://github.com/neovim/neovim $HOME/.local/src/neovim
        cd $HOME/.local/src/neovim
        make distclean 
        make CMAKE_BUILD_TYPE=RelWithDebInfo CMAKE_INSTALL_PREFIX=$HOME/.local
        make install
      stdout: true

- link:
    ~/.config/nvim: neovim
